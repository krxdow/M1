
package web.service.booking;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BookingService", targetNamespace = "http://services.booking.service.web/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BookingService {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<web.service.booking.Hotel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchHotel", targetNamespace = "http://services.booking.service.web/", className = "web.service.booking.SearchHotel")
    @ResponseWrapper(localName = "searchHotelResponse", targetNamespace = "http://services.booking.service.web/", className = "web.service.booking.SearchHotelResponse")
    @Action(input = "http://services.booking.service.web/BookingService/searchHotelRequest", output = "http://services.booking.service.web/BookingService/searchHotelResponse")
    public List<Hotel> searchHotel(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        float arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        float arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        float arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        XMLGregorianCalendar arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        XMLGregorianCalendar arg5);

    /**
     * 
     * @return
     *     returns java.util.List<web.service.booking.Hotel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "allHotels", targetNamespace = "http://services.booking.service.web/", className = "web.service.booking.AllHotels")
    @ResponseWrapper(localName = "allHotelsResponse", targetNamespace = "http://services.booking.service.web/", className = "web.service.booking.AllHotelsResponse")
    @Action(input = "http://services.booking.service.web/BookingService/allHotelsRequest", output = "http://services.booking.service.web/BookingService/allHotelsResponse")
    public List<Hotel> allHotels();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<web.service.booking.Room>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchRoom", targetNamespace = "http://services.booking.service.web/", className = "web.service.booking.SearchRoom")
    @ResponseWrapper(localName = "searchRoomResponse", targetNamespace = "http://services.booking.service.web/", className = "web.service.booking.SearchRoomResponse")
    @Action(input = "http://services.booking.service.web/BookingService/searchRoomRequest", output = "http://services.booking.service.web/BookingService/searchRoomResponse")
    public List<Room> searchRoom(
        @WebParam(name = "arg0", targetNamespace = "")
        Hotel arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "makeBooking", targetNamespace = "http://services.booking.service.web/", className = "web.service.booking.MakeBooking")
    @ResponseWrapper(localName = "makeBookingResponse", targetNamespace = "http://services.booking.service.web/", className = "web.service.booking.MakeBookingResponse")
    @Action(input = "http://services.booking.service.web/BookingService/makeBookingRequest", output = "http://services.booking.service.web/BookingService/makeBookingResponse")
    public String makeBooking(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        List<Room> arg3);

}
